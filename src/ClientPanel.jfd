JFDML JFormDesigner: "7.0.0.0.58" Java: "1.8.0_144" encoding: "UTF-8"

new FormModel {
	contentType: "form/swing"
	root: new FormRoot {
		add( new FormContainer( "javax.swing.JPanel", new FormLayoutManager( class org.jdesktop.layout.GroupLayout ) {
			"$horizontalGroup": "par l {seq l {space :p:25:p, par l {seq l {comp chunkSizeLabel:::p::p, space :190:271:x}, seq {par l {comp fileOptionsLabel::l:::x, seq {par l {comp armoringCheckBox:::p::p, comp copyRadioButton::l:p::p, comp overwriteRadioButton::l:p::p}, space :0:0:x}}, space :p:94:p}, seq {par t {comp authenticationOptionsLabel::l:p::p, comp passwordLabel::l:p::p, comp usernameLabel::l:p::p, comp portLabel::l:p::p, comp plainRadioButton::l:p::p, comp serverLabel::l:p::p, comp statusLabel::l:p::p}, space :0:0:x}, seq t {par t {comp disconnectButton::l::300:x, comp connectButton::l::300:x, comp chunkSizeSlider::l::300:x, seq {comp fileButton:::p::p, space ::118:x, comp fileClearButton:::p::p}, seq {comp xorButton:::p::p, space ::186:x, comp xorClearButton:::p::p}, comp fileScrollPane::l::300:x, comp xorScrollPane::l::300:x, comp passwordField::l::300:x, comp usernameTextField::l::300:x, comp portTextField::l::300:x, comp dynamicStatusLabel::l::300:x, comp serverTextField::::300:x, seq {space :0:185:x, par t {comp sendFileButton:::p::p, seq t {comp chunkSizeSpinner:::p::p, space :::p, comp chunkSizeValueLabel:::p::p}}}}, space :p:75:p}}}}"
			"$verticalGroup": "par l {seq l {space :p:25:p, comp statusLabel:::p::p, space s:::p, comp dynamicStatusLabel:::p::p, space s:::p, comp serverLabel:::p::p, space :p:18:p, comp serverTextField:::p:32:p, space s:::p, comp portLabel:::p::p, space s:::p, comp portTextField:::p:32:p, space s:::p, comp usernameLabel:::p::p, space s:::p, comp usernameTextField:::p:32:p, space s:::p, comp passwordLabel:::p::p, space s:::p, comp passwordField:::p::p, space s:::p, comp authenticationOptionsLabel:::p::p, space s:::p, comp plainRadioButton:::p::p, space s:::p, par b {comp xorButton::b:p::p, comp xorClearButton::b:p::p}, space s:::p, comp xorScrollPane:::p:32:p, space s:::p, par b {comp fileButton::b:p::p, comp fileClearButton::b:p::p}, space s:::p, comp fileScrollPane:::p::p, space s:::p, comp sendFileButton:::p::p, space :p:18:p, comp fileOptionsLabel:::p::p, space s:::p, comp armoringCheckBox:::p::p, space :::p, comp copyRadioButton:::p::p, space :p::p, comp overwriteRadioButton:::p::p, space s:::p, comp chunkSizeLabel:::p::p, space s:::p, comp chunkSizeSlider:::p::p, space :::p, par b {comp chunkSizeValueLabel::b:p::p, comp chunkSizeSpinner::b:p::p}, space ::97:x, comp connectButton:::p::p, space :::p, comp disconnectButton:::p::p, space :p:25:p}}"
		} ) {
			name: "this"
			"preferredSize": new java.awt.Dimension( 400, 1200 )
			"opaque": false
			"minimumSize": new java.awt.Dimension( 450, 1200 )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "statusLabel"
				"text": "Status"
				"font": &SwingDerivedFont0 new com.jformdesigner.model.SwingDerivedFont( null, 1, 5, false )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "usernameLabel"
				"text": "Username"
				"font": #SwingDerivedFont0
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "usernameTextField"
				"background": &Color0 new java.awt.Color( 255, 255, 255, 255 )
				"text": "Debug"
				"font": &SwingDerivedFont1 new com.jformdesigner.model.SwingDerivedFont( null, 3, 0, false )
				"foreground": &Color1 new java.awt.Color( 153, 0, 0, 255 )
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
				"preferredSize": new java.awt.Dimension( 45, 32 )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "passwordLabel"
				"text": "Password"
				"font": #SwingDerivedFont0
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JPasswordField" ) {
				name: "passwordField"
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
				"background": #Color0
				"font": #SwingDerivedFont1
				"foreground": #Color1
				"preferredSize": new java.awt.Dimension( 0, 32 )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "portLabel"
				"text": "Server Port"
				"font": #SwingDerivedFont0
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "portTextField"
				"text": "1492"
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
				"font": #SwingDerivedFont1
				"foreground": #Color1
				"preferredSize": new java.awt.Dimension( 36, 32 )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "serverLabel"
				"text": "Server Address"
				"font": #SwingDerivedFont0
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "fileButton"
				"text": "File To Transfer"
				"minimumSize": new java.awt.Dimension( 92, 29 )
				"maximumSize": new java.awt.Dimension( 92, 29 )
				"font": #SwingDerivedFont0
				"horizontalAlignment": 10
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, sfield java.awt.Color black )
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "fileButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "fileOptionsLabel"
				"text": "File Option"
				"font": #SwingDerivedFont0
				"minimumSize": new java.awt.Dimension( 95, 17 )
				"maximumSize": new java.awt.Dimension( 95, 17 )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JCheckBox" ) {
				name: "armoringCheckBox"
				"text": "ASCII Armoring"
				"font": &SwingDerivedFont2 new com.jformdesigner.model.SwingDerivedFont( null, 1, 0, false )
			} )
			add( new FormComponent( "javax.swing.JRadioButton" ) {
				name: "overwriteRadioButton"
				"text": "Overwrite"
				"font": #SwingDerivedFont2
				"$buttonGroup": new FormReference( "fileOptionButtonGroup" )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "chunkSizeLabel"
				"text": "Chunk Size"
				"font": #SwingDerivedFont0
			} )
			add( new FormComponent( "javax.swing.JSlider" ) {
				name: "chunkSizeSlider"
				"maximum": 1000
				"minimum": 1
				"paintTicks": true
				"majorTickSpacing": 100
				"value": 1000
				"minorTickSpacing": 50
				addEvent( new FormEvent( "javax.swing.event.ChangeListener", "stateChanged", "chunkSizeSliderStateChanged", true ) )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "chunkSizeValueLabel"
				"text": "KB"
				"font": new com.jformdesigner.model.SwingDerivedFont( null, 1, 1, false )
				"horizontalAlignment": 11
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "sendFileButton"
				"text": "Send"
				"font": #SwingDerivedFont0
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, sfield java.awt.Color black )
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "sendFileButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "disconnectButton"
				"text": "Disconnect"
				"font": #SwingDerivedFont0
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "disconnectButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "connectButton"
				"text": "Connect"
				"font": #SwingDerivedFont0
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "connectButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "dynamicStatusLabel"
				"font": new com.jformdesigner.model.SwingDerivedFont( null, 3, 0, false )
				"foreground": new java.awt.Color( 153, 0, 0, 255 )
				"text": "Stopped"
			} )
			add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
				name: "fileScrollPane"
				"verticalScrollBarPolicy": 21
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
				"preferredSize": new java.awt.Dimension( 27, 32 )
				add( new FormComponent( "javax.swing.JTextArea" ) {
					name: "fileTextArea"
					"font": &SwingDerivedFont3 new com.jformdesigner.model.SwingDerivedFont( null, 3, 0, false )
					"foreground": &Color2 new java.awt.Color( 153, 0, 0, 255 )
					"rows": 1
					"editable": false
					"tabSize": 0
					"border": sfield com.jformdesigner.model.FormObject NULL_VALUE
				} )
			} )
			add( new FormComponent( "javax.swing.JTextField" ) {
				name: "serverTextField"
				"font": #SwingDerivedFont3
				"foreground": #Color2
				"text": "localhost"
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
			} )
			add( new FormComponent( "javax.swing.JRadioButton" ) {
				name: "copyRadioButton"
				"text": "Copy"
				"font": new com.jformdesigner.model.SwingDerivedFont( null, 1, 0, false )
				"$buttonGroup": new FormReference( "fileOptionButtonGroup" )
				"selected": true
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "xorButton"
				"text": "XOR Key"
				"font": #SwingDerivedFont0
				"actionCommand": "XOR-Key File"
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, sfield java.awt.Color black )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "xorButtonActionPerformed", true ) )
			} )
			add( new FormContainer( "javax.swing.JScrollPane", new FormLayoutManager( class javax.swing.JScrollPane ) ) {
				name: "xorScrollPane"
				"verticalScrollBarPolicy": 21
				"border": new javax.swing.border.MatteBorder( 0, 0, 1, 0, new java.awt.Color( 204, 204, 204, 255 ) )
				"preferredSize": new java.awt.Dimension( 29, 32 )
				add( new FormComponent( "javax.swing.JTextArea" ) {
					name: "xorTextArea"
					"font": new com.jformdesigner.model.SwingDerivedFont( null, 3, 0, false )
					"foreground": new java.awt.Color( 153, 0, 0, 255 )
					"rows": 1
					"editable": false
					"tabSize": 0
					"border": sfield com.jformdesigner.model.FormObject NULL_VALUE
				} )
			} )
			add( new FormComponent( "javax.swing.JLabel" ) {
				name: "authenticationOptionsLabel"
				"text": "Authentication"
				"font": #SwingDerivedFont0
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
			add( new FormComponent( "javax.swing.JRadioButton" ) {
				name: "plainRadioButton"
				"text": "Plain Text"
				"font": new com.jformdesigner.model.SwingDerivedFont( null, 1, 0, false )
				"selected": true
				"$buttonGroup": new FormReference( "authenticationGroup" )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "xorClearButton"
				"text": "Clear"
				"border": &MatteBorder0 new javax.swing.border.MatteBorder( 0, 0, 1, 0, sfield java.awt.Color black )
				"font": &SwingDerivedFont4 new com.jformdesigner.model.SwingDerivedFont( null, 1, 0, false )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "xorClearButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JButton" ) {
				name: "fileClearButton"
				"text": "Clear"
				"border": #MatteBorder0
				"font": #SwingDerivedFont4
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
				addEvent( new FormEvent( "java.awt.event.ActionListener", "actionPerformed", "fileClearButtonActionPerformed", true ) )
			} )
			add( new FormComponent( "javax.swing.JSpinner" ) {
				name: "chunkSizeSpinner"
				"model": new javax.swing.SpinnerNumberModel( 1, 1, 1000, 1 )
				"font": new com.jformdesigner.model.SwingDerivedFont( null, 3, 0, false )
				auxiliary() {
					"JavaCodeGenerator.variableLocal": true
				}
			} )
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 0, 0 )
			"size": new java.awt.Dimension( 400, 1200 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "fileOptionButtonGroup"
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 485, 40 )
		} )
		add( new FormNonVisual( "javax.swing.ButtonGroup" ) {
			name: "authenticationGroup"
		}, new FormLayoutConstraints( null ) {
			"location": new java.awt.Point( 485, 125 )
		} )
		addBindingGroup( new FormBindingGroup( class org.jdesktop.beansbinding.BindingGroup ) {
			"name": "bindingGroup"
			addBinding( new FormBinding( "connectButton", "enabled", "serverTextField", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "portTextField", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "usernameTextField", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "passwordField", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "plainRadioButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "fileButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "sendFileButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "fileTextArea", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "armoringCheckBox", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "copyRadioButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "overwriteRadioButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "chunkSizeSlider", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "chunkSizeValueLabel", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "${!enabled}", "disconnectButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "xorButton", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "xorTextArea", "enabled" ) )
			addBinding( new FormBinding( "connectButton", "enabled", "xorClearButton", "enabled" ) )
			addBinding( new FormBinding( "fileButton", "enabled", "fileClearButton", "enabled" ) )
			addBinding( new FormBinding( "disconnectButton", "enabled", "chunkSizeSpinner", "enabled" ) )
			addBinding( new FormBinding( "chunkSizeSlider", "value", "chunkSizeSpinner", "value" ) )
			addBinding( new FormBinding( "chunkSizeSpinner", "value", "chunkSizeSlider", "value" ) )
		} )
	}
}
